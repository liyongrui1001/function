var ready = (function () {
                var readyList = [],
                    readyFired = false,
                    readyEventHandlersInstalled = false;

                function ready() {
                    if (!readyFired) {
                        // this must be set to true before we start calling callbacks
                        readyFired = true;
                        for (var i = 0; i < readyList.length; i++) {
                            // processing the function list
                            readyList[i].fn.call(window, readyList[i].ctx);
                        }
                        // release function list
                        readyList = [];
                    }
                }

                function readyStateChange() {
                    if (document.readyState === "complete") {
                        ready();
                    }
                }

                // public function (like Jquery's document ready function)
                function docReady(callback, context) {
                    if (typeof callback !== "function") {
                        throw new TypeError("callback for sa.ready(fn) must be a function");
                    }
                    // if ready has already fired, then just schedule the callback
                    if (readyFired) {
                        setTimeout(function () {
                            callback(context);
                        }, 1);
                        return;
                    } else {
                        // add the function and context to the list
                        readyList.push({
                            fn: callback,
                            ctx: context
                        });
                    }
                    // if document already ready to go, schedule the ready function to run
                    if (document.readyState === "complete" || (!document.attachEvent && document.readyState === "interactive")) {
                        // IE only safe when readyState is "complete", others safe when readyState is "interactive"
                        setTimeout(ready, 1);
                    } else if (!readyEventHandlersInstalled) {
                        if (document.addEventListener) {
                            document.addEventListener("DOMContentLoaded", ready, false);
                            window.addEventListener("load", ready, false);
                        } else {
                            document.attachEvent("onreadystatechange", readyStateChange);
                            window.attachEvent("onload", ready);
                        }
                        readyEventHandlersInstalled = true;
                    }
                }
                return docReady;
            })();
var whenReady = (function () { //这个函数返回whenReady()函数
            var funcs = []; //当获得事件时，要运行的函数
            var ready = false; //当触发事件处理程序时,切换为true
            //当文档就绪时,调用事件处理程序
            function handler(e) {
                if (ready) {
                    return; //确保事件处理程序只完整运行一次
                }
                //如果发生onreadystatechange事件，但其状态不是complete的话,那么文档尚未准备好
                if (e.type === 'onreadystatechange' && document.readyState !== 'complete') {
                    return;
                }
                //运行所有注册函数
                //注意每次都要计算funcs.length
                //以防这些函数的调用可能会导致注册更多的函数
                for (var i = 0; i < funcs.length; i++) {
                    funcs[i].call(document);
                }
                //事件处理函数完整执行,切换ready状态, 并移除所有函数
                ready = true;
                funcs = null;
            }
            //为接收到的任何事件注册处理程序
            if (document.addEventListener) {
                document.addEventListener('DOMContentLoaded', handler, false);
                document.addEventListener('readystatechange', handler, false); //IE9+
                window.addEventListener('load', handler, false);
            } else if (document.attachEvent) {
                document.attachEvent('onreadystatechange', handler);
                window.attachEvent('onload', handler);
            }
            //返回whenReady()函数
            return function whenReady(fn) {
                if (ready) {
                    fn.call(document);
                } else {
                    funcs.push(fn);
                }
            }
        })();
